GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/14/22 15:02:14 Page 1
Pump Scheduling 4WT
C o m p i l a t i o n


   2   
   3  Sets
   4       n          nodes       / s, j1, j2, r1, r2, r3, r4 /
   5       j(n)       junctions   / j1, j2 /
   6       r(n)       reservoirs  / r1, r2, r3, r4 /
   7       l(n,n)     pipes       / s.j1, j1.j2, j1.r1, j1.r4, j2.r2, j2.r3 /
   8       t          1-hour periods  / t1*t24 /
   9       night(t)   night periods   / t1*t8 /
  10       c          pump class    / small /
  11       d          pump number   / p1*p3 /
  12       k(c,d)     pump type     / small.p1*p3 /
  13       degree     polynomial degrees / 0*2 /
  14   
  15       alias (n,np)
  16       alias (k,kp)
  17       alias (d,dp);
  18   
  19  Scalar
  20       height0      reference height at the source (m)     / 0 /
  21       tariffnight  electricity hourly tariff at night (euro.kWh^-1) / 0.02916 /
  22       tariffday    electricity hourly tariff at day (euro.kWh^-1)   / 0.04609 /
  23   
  24  Parameter tariff(t)   electricity tariff;
  25      tariff(t)        = tariffday;
  26      tariff(night(t)) = tariffnight;
  27   
  28  Parameters
  29      height(n)   elevation at each node relative to s (m)
  30                  / s 0, j1 30, j2 30, r1 50, r2 50, r3 45, r4 35 /
  31   
  32      surface(r)  mean surface of each reservoir (m^2)
  33                  / r1 80, r2 80, r3 80, r4 80 /
  34   
  35      vmin(r)     minimal volume of each reservoir (m^3)
  36                  / r1 100, r2 100, r3 100, r4 100 /
  37   
  38      vmax(r)     maximal volume of each reservoir (m^3)
  39                  / r1 300, r2 300, r3 300, r4 300 /
  40   
  41  Parameter vinit(r) initial volume of each reservoir;
  42      vinit(r) = vmin(r);
  43   
  44  * a polynomial is represented as the list of coefficients for each term degree
  45  Table psi(c,degree) quadratic fit of the service pressure (m) on the flow (m^3.h^-1) for each class of pumps
  46                    0              1            2
  47        small       63.0796        0            -0.0064085;
  48   
  49  Table gamma(c,degree) linear fit of the electrical power (kW) on the flow (m^3.h^-1) for each class of pumps
  50                    0              1
  51        small       3.81101     0.09627;
  52   
  53  Table demand(r,t) demand in water at each reservoir and each hour (m^3)
  54       t1     t2    t3    t4     t5     t6    t7      t8      t9     t10   t11   t12   t13    t14    t15   t16   t17   t18   t19   t20   t21   t22   t23   t24
  55  r1   9.83   5.0   3.67  6.5    5.67   7.5   3.0     3.0     2.0    13.5  14.0  12.0  12.0   12.0   12.0  12.83 15.67 13.17 12.0  10.0  11.0  14.0  19.5  10.17
  56  r2   44.83  18.0  0.0   0.0    0.0    0.0   0.0     45.0    51.67  0.0   0.0   0.0   15.17  103.83 34.83 43.83 54.83 51.17 53.5  0.67  0.0   0.0   1.5   53.5
  57  r3   14.0   13.33 25.5  11.0   10.0   10.0  11.0    10.33   30.17  17.67 36.33 38.0  35.0   35.17  19.33 31.83 23.5  16.83 28.0  33.5  39.0  38.5  32.67 29.67
  58  r4   1.0    1.0   8.5   9.5    4.0    2.33  0.0     1.0     0.83   2.0   2.0   2.0   2.0    2.0    2.0   3.0   2.0   1.0   2.0   3.0   2.0   3.0   3.0   2.0;
  59   
  60  Table phi(n,n,degree) quadratic fit of the pressure loss (m) on the flow (m^3.h^-1) for each pipe
  61                  2               1
  62       s.j1       0.00005425      0.00038190
  63       j1.j2      0.00027996      0.00149576
  64       j1.r1      0.00089535      0.00340436
  65       j1.r4      0.00044768      0.00170218
  66       j2.r2      0.00223839      0.00851091
  67       j2.r3      0.00134303      0.00510655;
  68   
  69  Positive Variable
  70      qkt(c,d,t) Débit d_eau pompé par la pompe k à la période t
  71      qrt(r,t) Débit entrant dans chaque réservoir r à la période t
  72      qlt(n,n,t)  débit en pipe l au temps t
  73      vrt(r,t) Volume d_eau dans les réservoirs r à la période t
  74      pkt(c,d,t) Puissance de la pompe k à la période t
  75      charge(n,t) Charge à chaque noeud j à la période t;
  76   
  77  Binary Variable
  78      xkt(c,d,t) Pompe k allumé à la période t, sinon 0;
  79   
  80  free variable
  81      z Coût total ;
  82   
  83  Equations
  84      cost    definition de la fonction objective
  85      flow_s(t)   conservation du flow entre les pompes et la source à chaque temps t
  86      flow_r(t,n)   conservation du flow à chaque temps t
  87      flow_j(t,n)   conservation du flow à chaque temps t
  88      volumes_min(r,t)   volumes min à chaque temps t et pour chaque réservoir r
  89      volumes_max(r,t)  volumes max à chaque temps t et pour chaque réservoir r
  90      demandes_t1(r)   demandes pour t1 et pour chaque réservoir r
  91      demandes(r,t)   demandes pour chaque temps t et pour chaque réservoir r (aussi conservation du flow dans chaque tank)
  92      debits_min (c,d,t)   débits min pour chaque temps t et pour chaque pompe k (ssi la pompe k est allumée)
  93      debits_max (c,d,t)   débits max pour chaque temps t et pour chaque pompe k (ssi la pompe k est allumée)
  94      puissances(c,d,t)   puissances de chaque pompe à chaque temps t et pour chaque pompe k
  95      gain_de_charge(c,d,t)   charge en s égale au gain de charge des pompes de toutes classes pour tout t
  96      perte_de_charge_j (n,n,t)    charge en j égale à la perte de charge des canalisations pour tout t et tous noeuds
  97      perte_de_charge_r (n,n,t)    charge en j égale à la perte de charge des canalisations pour tout t et tous noeuds
  98      charge_r(r,t)   charge en r pour tout t;
  99   
 100   
 101   
 102  cost ..        z  =e=  sum((k,t),pkt(k,t) * tariff(t)) ;
 103  flow_s(t) ..     sum((k), qkt(k,t))  =e=  sum(l('s',np), qlt(l,t)) ;
 104  flow_r(t,r(n)) ..     sum(l(np,n), qlt(l,t))  =e=  qrt(r,t) ;
 105  flow_j(t,j(n)) ..     sum(l(np,n), qlt(l,t))  =e=  sum(l(n,np), qlt(l,t)) ;
 106  volumes_min(r,t) .. vmin(r)  =l=  vrt(r,t)  ;
 107  volumes_max(r,t) .. vrt(r,t)  =l=  vmax(r);
 108  demandes_t1(r)  .. vinit(r) + qrt(r,'t1') =e= vrt(r,'t1') + demand(r,'t1') ;
 109  demandes(r,t) $(ord(t) gt 1) .. vrt(r,t-1) + qrt(r,t) =e= vrt(r,t) + demand(r,t) ;
 110  debits_min(k(c,d),t) .. xkt(k,t)*0  =l=  qkt(k,t)   ;
 111  debits_max(k(c,d),t) .. qkt(k,t)  =l=  xkt(k,t) * 99.21 ;
 112  puissances(k(c,d),t) .. pkt(k,t) =e= gamma(c,'0')*xkt(k,t) + gamma(c,'1')*qkt(k,t) ;
 113  gain_de_charge(k(c,d),t) .. charge('s',t)*xkt(k,t) =l= psi('small','0')*xkt(k,t)+psi('small','2')*(qkt(k,t)*qkt(k,t));
 114  perte_de_charge_j(l(n,j(np)),t) .. charge(n,t) - charge(np,t)  =g= phi(l,'1')*qlt(l,t) + phi(l,'2')*(qlt(l,t)*qlt(l,t)) ;
 115  perte_de_charge_r(l(n,r(np)),t) .. charge(n,t) - charge(np,t) - height(r) =g= phi(l,'1')*qlt(l,t) + phi(l,'2')*(qlt(l,t)*qlt(l,t)) ;
 116  charge_r(r,t)..  charge(r,t) =e= vrt(r,t) / surface(r);
 117   
 118   
 119  Model Planification /all/;
 120   
 121  Solve Planification using minlp minimizing z ;

**** LIST OF STRAY NAMES - CHECK DECLARATIONS FOR SPURIOUS COMMAS
**** STRAY NAME sinon OF TYPE VAR  


COMPILATION TIME     =        0.000 SECONDS      3 MB  25.1.2 r67455 WEX-WEI
GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/14/22 15:02:14 Page 2
Pump Scheduling 4WT
Equation Listing    SOLVE Planification Using MINLP From line 121


---- cost  =E=  definition de la fonction objective

cost..  - 0.02916*pkt(small,p1,t1) - 0.02916*pkt(small,p1,t2) - 0.02916*pkt(small,p1,t3) - 0.02916*pkt(small,p1,t4) - 0.02916*pkt(small,p1,t5) - 0.02916*pkt(small,p1,t6) - 0.02916*pkt(small,p1,t7) - 0.02916*pkt(small,p1,t8) - 0.04609*pkt(small,p1,t9)
     
      - 0.04609*pkt(small,p1,t10) - 0.04609*pkt(small,p1,t11) - 0.04609*pkt(small,p1,t12) - 0.04609*pkt(small,p1,t13) - 0.04609*pkt(small,p1,t14) - 0.04609*pkt(small,p1,t15) - 0.04609*pkt(small,p1,t16) - 0.04609*pkt(small,p1,t17)
     
      - 0.04609*pkt(small,p1,t18) - 0.04609*pkt(small,p1,t19) - 0.04609*pkt(small,p1,t20) - 0.04609*pkt(small,p1,t21) - 0.04609*pkt(small,p1,t22) - 0.04609*pkt(small,p1,t23) - 0.04609*pkt(small,p1,t24) - 0.02916*pkt(small,p2,t1) - 0.02916*pkt(small,p2,t2)
     
      - 0.02916*pkt(small,p2,t3) - 0.02916*pkt(small,p2,t4) - 0.02916*pkt(small,p2,t5) - 0.02916*pkt(small,p2,t6) - 0.02916*pkt(small,p2,t7) - 0.02916*pkt(small,p2,t8) - 0.04609*pkt(small,p2,t9) - 0.04609*pkt(small,p2,t10) - 0.04609*pkt(small,p2,t11)
     
      - 0.04609*pkt(small,p2,t12) - 0.04609*pkt(small,p2,t13) - 0.04609*pkt(small,p2,t14) - 0.04609*pkt(small,p2,t15) - 0.04609*pkt(small,p2,t16) - 0.04609*pkt(small,p2,t17) - 0.04609*pkt(small,p2,t18) - 0.04609*pkt(small,p2,t19)
     
      - 0.04609*pkt(small,p2,t20) - 0.04609*pkt(small,p2,t21) - 0.04609*pkt(small,p2,t22) - 0.04609*pkt(small,p2,t23) - 0.04609*pkt(small,p2,t24) - 0.02916*pkt(small,p3,t1) - 0.02916*pkt(small,p3,t2) - 0.02916*pkt(small,p3,t3) - 0.02916*pkt(small,p3,t4)
     
      - 0.02916*pkt(small,p3,t5) - 0.02916*pkt(small,p3,t6) - 0.02916*pkt(small,p3,t7) - 0.02916*pkt(small,p3,t8) - 0.04609*pkt(small,p3,t9) - 0.04609*pkt(small,p3,t10) - 0.04609*pkt(small,p3,t11) - 0.04609*pkt(small,p3,t12) - 0.04609*pkt(small,p3,t13)
     
      - 0.04609*pkt(small,p3,t14) - 0.04609*pkt(small,p3,t15) - 0.04609*pkt(small,p3,t16) - 0.04609*pkt(small,p3,t17) - 0.04609*pkt(small,p3,t18) - 0.04609*pkt(small,p3,t19) - 0.04609*pkt(small,p3,t20) - 0.04609*pkt(small,p3,t21)
     
      - 0.04609*pkt(small,p3,t22) - 0.04609*pkt(small,p3,t23) - 0.04609*pkt(small,p3,t24) + z =E= 0 ; (LHS = 0)
     

---- flow_s  =E=  conservation du flow entre les pompes et la source à chaque temps t

flow_s(t1)..  qkt(small,p1,t1) + qkt(small,p2,t1) + qkt(small,p3,t1) - qlt(s,j1,t1) =E= 0 ; (LHS = 0)
     
flow_s(t2)..  qkt(small,p1,t2) + qkt(small,p2,t2) + qkt(small,p3,t2) - qlt(s,j1,t2) =E= 0 ; (LHS = 0)
     
flow_s(t3)..  qkt(small,p1,t3) + qkt(small,p2,t3) + qkt(small,p3,t3) - qlt(s,j1,t3) =E= 0 ; (LHS = 0)
     
REMAINING 21 ENTRIES SKIPPED


---- flow_r  =E=  conservation du flow à chaque temps t

flow_r(t1,r1)..  - qrt(r1,t1) + qlt(j1,r1,t1) =E= 0 ; (LHS = 0)
     
flow_r(t1,r2)..  - qrt(r2,t1) + qlt(j2,r2,t1) =E= 0 ; (LHS = 0)
     
flow_r(t1,r3)..  - qrt(r3,t1) + qlt(j2,r3,t1) =E= 0 ; (LHS = 0)
     
REMAINING 93 ENTRIES SKIPPED


---- flow_j  =E=  conservation du flow à chaque temps t

flow_j(t1,j1)..  qlt(s,j1,t1) - qlt(j1,j2,t1) - qlt(j1,r1,t1) - qlt(j1,r4,t1) =E= 0 ; (LHS = 0)
     
flow_j(t1,j2)..  qlt(j1,j2,t1) - qlt(j2,r2,t1) - qlt(j2,r3,t1) =E= 0 ; (LHS = 0)
     
flow_j(t2,j1)..  qlt(s,j1,t2) - qlt(j1,j2,t2) - qlt(j1,r1,t2) - qlt(j1,r4,t2) =E= 0 ; (LHS = 0)
     
REMAINING 45 ENTRIES SKIPPED


---- volumes_min  =L=  volumes min à chaque temps t et pour chaque réservoir r

volumes_min(r1,t1)..  - vrt(r1,t1) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
volumes_min(r1,t2)..  - vrt(r1,t2) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
volumes_min(r1,t3)..  - vrt(r1,t3) =L= -100 ; (LHS = 0, INFES = 100 ****)
     
REMAINING 93 ENTRIES SKIPPED


---- volumes_max  =L=  volumes max à chaque temps t et pour chaque réservoir r

volumes_max(r1,t1)..  vrt(r1,t1) =L= 300 ; (LHS = 0)
     
volumes_max(r1,t2)..  vrt(r1,t2) =L= 300 ; (LHS = 0)
     
volumes_max(r1,t3)..  vrt(r1,t3) =L= 300 ; (LHS = 0)
     
REMAINING 93 ENTRIES SKIPPED


---- demandes_t1  =E=  demandes pour t1 et pour chaque réservoir r

demandes_t1(r1)..  qrt(r1,t1) - vrt(r1,t1) =E= -90.17 ; (LHS = 0, INFES = 90.17 ****)
     
demandes_t1(r2)..  qrt(r2,t1) - vrt(r2,t1) =E= -55.17 ; (LHS = 0, INFES = 55.17 ****)
     
demandes_t1(r3)..  qrt(r3,t1) - vrt(r3,t1) =E= -86 ; (LHS = 0, INFES = 86 ****)
     
REMAINING ENTRY SKIPPED


---- demandes  =E=  demandes pour chaque temps t et pour chaque réservoir r (aussi conservation du flow dans chaque tank)

demandes(r1,t2)..  qrt(r1,t2) + vrt(r1,t1) - vrt(r1,t2) =E= 5 ; (LHS = 0, INFES = 5 ****)
     
demandes(r1,t3)..  qrt(r1,t3) + vrt(r1,t2) - vrt(r1,t3) =E= 3.67 ; (LHS = 0, INFES = 3.67 ****)
     
demandes(r1,t4)..  qrt(r1,t4) + vrt(r1,t3) - vrt(r1,t4) =E= 6.5 ; (LHS = 0, INFES = 6.5 ****)
     
REMAINING 89 ENTRIES SKIPPED


---- debits_min  =L=  débits min pour chaque temps t et pour chaque pompe k (ssi la pompe k est allumée)

debits_min(small,p1,t1)..  - qkt(small,p1,t1) =L= 0 ; (LHS = 0)
     
debits_min(small,p1,t2)..  - qkt(small,p1,t2) =L= 0 ; (LHS = 0)
     
debits_min(small,p1,t3)..  - qkt(small,p1,t3) =L= 0 ; (LHS = 0)
     
REMAINING 69 ENTRIES SKIPPED


---- debits_max  =L=  débits max pour chaque temps t et pour chaque pompe k (ssi la pompe k est allumée)

debits_max(small,p1,t1)..  qkt(small,p1,t1) - 99.21*xkt(small,p1,t1) =L= 0 ; (LHS = 0)
     
debits_max(small,p1,t2)..  qkt(small,p1,t2) - 99.21*xkt(small,p1,t2) =L= 0 ; (LHS = 0)
     
debits_max(small,p1,t3)..  qkt(small,p1,t3) - 99.21*xkt(small,p1,t3) =L= 0 ; (LHS = 0)
     
REMAINING 69 ENTRIES SKIPPED


---- puissances  =E=  puissances de chaque pompe à chaque temps t et pour chaque pompe k

puissances(small,p1,t1)..  - 0.09627*qkt(small,p1,t1) + pkt(small,p1,t1) - 3.81101*xkt(small,p1,t1) =E= 0 ; (LHS = 0)
     
puissances(small,p1,t2)..  - 0.09627*qkt(small,p1,t2) + pkt(small,p1,t2) - 3.81101*xkt(small,p1,t2) =E= 0 ; (LHS = 0)
     
puissances(small,p1,t3)..  - 0.09627*qkt(small,p1,t3) + pkt(small,p1,t3) - 3.81101*xkt(small,p1,t3) =E= 0 ; (LHS = 0)
     
REMAINING 69 ENTRIES SKIPPED


---- gain_de_charge  =L=  charge en s égale au gain de charge des pompes de toutes classes pour tout t

gain_de_charge(small,p1,t1)..  (0)*qkt(small,p1,t1) + (0)*charge(s,t1) - (63.0796)*xkt(small,p1,t1) =L= 0 ; (LHS = 0)
     
gain_de_charge(small,p1,t2)..  (0)*qkt(small,p1,t2) + (0)*charge(s,t2) - (63.0796)*xkt(small,p1,t2) =L= 0 ; (LHS = 0)
     
gain_de_charge(small,p1,t3)..  (0)*qkt(small,p1,t3) + (0)*charge(s,t3) - (63.0796)*xkt(small,p1,t3) =L= 0 ; (LHS = 0)
     
REMAINING 69 ENTRIES SKIPPED


---- perte_de_charge_j  =G=  charge en j égale à la perte de charge des canalisations pour tout t et tous noeuds

perte_de_charge_j(s,j1,t1)..  - (0.0003819)*qlt(s,j1,t1) + charge(s,t1) - charge(j1,t1) =G= 0 ; (LHS = 0)
     
perte_de_charge_j(s,j1,t2)..  - (0.0003819)*qlt(s,j1,t2) + charge(s,t2) - charge(j1,t2) =G= 0 ; (LHS = 0)
     
perte_de_charge_j(s,j1,t3)..  - (0.0003819)*qlt(s,j1,t3) + charge(s,t3) - charge(j1,t3) =G= 0 ; (LHS = 0)
     
REMAINING 45 ENTRIES SKIPPED


---- perte_de_charge_r  =G=  charge en j égale à la perte de charge des canalisations pour tout t et tous noeuds

perte_de_charge_r(j1,r1,t1)..  - (0.00340436)*qlt(j1,r1,t1) + charge(j1,t1) - charge(r1,t1) =G= 50 ; (LHS = 0, INFES = 50 ****)
     
perte_de_charge_r(j1,r1,t2)..  - (0.00340436)*qlt(j1,r1,t2) + charge(j1,t2) - charge(r1,t2) =G= 50 ; (LHS = 0, INFES = 50 ****)
     
perte_de_charge_r(j1,r1,t3)..  - (0.00340436)*qlt(j1,r1,t3) + charge(j1,t3) - charge(r1,t3) =G= 50 ; (LHS = 0, INFES = 50 ****)
     
REMAINING 93 ENTRIES SKIPPED


---- charge_r  =E=  charge en r pour tout t

charge_r(r1,t1)..  - 0.0125*vrt(r1,t1) + charge(r1,t1) =E= 0 ; (LHS = 0)
     
charge_r(r1,t2)..  - 0.0125*vrt(r1,t2) + charge(r1,t2) =E= 0 ; (LHS = 0)
     
charge_r(r1,t3)..  - 0.0125*vrt(r1,t3) + charge(r1,t3) =E= 0 ; (LHS = 0)
     
REMAINING 93 ENTRIES SKIPPED

GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/14/22 15:02:14 Page 3
Pump Scheduling 4WT
Column Listing      SOLVE Planification Using MINLP From line 121


---- qkt  Débit d_eau pompé par la pompe k à la période t

qkt(small,p1,t1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       flow_s(t1)
       -1       debits_min(small,p1,t1)
        1       debits_max(small,p1,t1)
       -0.0963  puissances(small,p1,t1)
       (0)      gain_de_charge(small,p1,t1)

qkt(small,p1,t2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       flow_s(t2)
       -1       debits_min(small,p1,t2)
        1       debits_max(small,p1,t2)
       -0.0963  puissances(small,p1,t2)
       (0)      gain_de_charge(small,p1,t2)

qkt(small,p1,t3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       flow_s(t3)
       -1       debits_min(small,p1,t3)
        1       debits_max(small,p1,t3)
       -0.0963  puissances(small,p1,t3)
       (0)      gain_de_charge(small,p1,t3)

REMAINING 69 ENTRIES SKIPPED

---- qrt  Débit entrant dans chaque réservoir r à la période t

qrt(r1,t1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       flow_r(t1,r1)
        1       demandes_t1(r1)

qrt(r1,t2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       flow_r(t2,r1)
        1       demandes(r1,t2)

qrt(r1,t3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       flow_r(t3,r1)
        1       demandes(r1,t3)

REMAINING 93 ENTRIES SKIPPED

---- qlt  débit en pipe l au temps t

qlt(s,j1,t1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       flow_s(t1)
        1       flow_j(t1,j1)
      (-0.0004) perte_de_charge_j(s,j1,t1)

qlt(s,j1,t2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       flow_s(t2)
        1       flow_j(t2,j1)
      (-0.0004) perte_de_charge_j(s,j1,t2)

qlt(s,j1,t3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       flow_s(t3)
        1       flow_j(t3,j1)
      (-0.0004) perte_de_charge_j(s,j1,t3)

REMAINING 141 ENTRIES SKIPPED

---- vrt  Volume d_eau dans les réservoirs r à la période t

vrt(r1,t1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       volumes_min(r1,t1)
        1       volumes_max(r1,t1)
       -1       demandes_t1(r1)
        1       demandes(r1,t2)
       -0.0125  charge_r(r1,t1)

vrt(r1,t2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       volumes_min(r1,t2)
        1       volumes_max(r1,t2)
       -1       demandes(r1,t2)
        1       demandes(r1,t3)
       -0.0125  charge_r(r1,t2)

vrt(r1,t3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       volumes_min(r1,t3)
        1       volumes_max(r1,t3)
       -1       demandes(r1,t3)
        1       demandes(r1,t4)
       -0.0125  charge_r(r1,t3)

REMAINING 93 ENTRIES SKIPPED

---- pkt  Puissance de la pompe k à la période t

pkt(small,p1,t1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.0292  cost
        1       puissances(small,p1,t1)

pkt(small,p1,t2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.0292  cost
        1       puissances(small,p1,t2)

pkt(small,p1,t3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -0.0292  cost
        1       puissances(small,p1,t3)

REMAINING 69 ENTRIES SKIPPED

---- charge  Charge à chaque noeud j à la période t

charge(s,t1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      gain_de_charge(small,p1,t1)
       (0)      gain_de_charge(small,p2,t1)
       (0)      gain_de_charge(small,p3,t1)
        1       perte_de_charge_j(s,j1,t1)

charge(s,t2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      gain_de_charge(small,p1,t2)
       (0)      gain_de_charge(small,p2,t2)
       (0)      gain_de_charge(small,p3,t2)
        1       perte_de_charge_j(s,j1,t2)

charge(s,t3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      gain_de_charge(small,p1,t3)
       (0)      gain_de_charge(small,p2,t3)
       (0)      gain_de_charge(small,p3,t3)
        1       perte_de_charge_j(s,j1,t3)

REMAINING 165 ENTRIES SKIPPED

---- xkt  Pompe k allumé à la période t

xkt(small,p1,t1)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99.21    debits_max(small,p1,t1)
       -3.811   puissances(small,p1,t1)
     (-63.0796) gain_de_charge(small,p1,t1)

xkt(small,p1,t2)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99.21    debits_max(small,p1,t2)
       -3.811   puissances(small,p1,t2)
     (-63.0796) gain_de_charge(small,p1,t2)

xkt(small,p1,t3)
                (.LO, .L, .UP, .M = 0, 0, 1, 0)
      -99.21    debits_max(small,p1,t3)
       -3.811   puissances(small,p1,t3)
     (-63.0796) gain_de_charge(small,p1,t3)

REMAINING 69 ENTRIES SKIPPED

---- z  Coût total

z
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       cost

GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/14/22 15:02:14 Page 4
Pump Scheduling 4WT
Model Statistics    SOLVE Planification Using MINLP From line 121


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          985
BLOCKS OF VARIABLES           8     SINGLE VARIABLES          721
NON ZERO ELEMENTS         2,277     NON LINEAR N-Z            360
DERIVATIVE POOL              20     CONSTANT POOL              30
CODE LENGTH               1,872     DISCRETE VARIABLES         72


GENERATION TIME      =        0.031 SECONDS      4 MB  25.1.2 r67455 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      4 MB  25.1.2 r67455 WEX-WEI
GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 12/14/22 15:02:14 Page 5
Pump Scheduling 4WT
Solution Report     SOLVE Planification Using MINLP From line 121


               S O L V E      S U M M A R Y

     MODEL   Planification       OBJECTIVE  z
     TYPE    MINLP               DIRECTION  MINIMIZE
     SOLVER  DICOPT              FROM LINE  121

**** SOLVER STATUS     7 Licensing Problems        
**** MODEL STATUS      11 Licensing Problem        
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT 2100000000    2000000000
 EVALUATION ERRORS              0             0
-------------------------------------------------------------------------------
Dicopt 2         25.1.2 r67455 Released Aug  1, 2018 WEI x86 64bit/MS Windows 
-------------------------------------------------------------------------------
by Aldo Vecchietti, Director del Instituto INGAR,
   CONICET, UTN, Santa Fe, Argentina
by Ignacio E. Grossmann, Chemical Engineering Faculty,
   Carnegie Mellon University, Pittsburgh, PA, USA
-------------------------------------------------------------------------------
*** No license found
*** To update your license, please contact your distributor.
*** Too many equations for demo mode
***   Number of equations          : 985
***   Maximum allowed              : 300
*** Too many variables for demo mode
***   Number of variables          : 721
***   Maximum allowed              : 300
*** Too many nonzero elements for demo mode
***   Number of nonzeros           : 2277
***   Maximum allowed              : 2000
*** Too many discrete variables for demo mode
***   Number of discrete variables : 72
***   Maximum allowed              : 50

No solution returned


EXECUTION TIME       =        0.000 SECONDS      2 MB  25.1.2 r67455 WEX-WEI


USER: Large MUD - 20 User License                    W181015:1136AO-GEN
      Ecole des Mines de Paris, CMA                              DC4036
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Valentin Lassaigne\Optim\MINLP\4WT.gms
Output     C:\Valentin Lassaigne\Optim\MINLP\4WT.lst
